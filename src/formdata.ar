let __multipart(req, res) = do
    let boundary = buffer().from(req.headers["Content-Type"].splitN("boundary=")[1])
    let newLineSplit = buffer().from("\r\n\r\n")
    let parts = req.buffer.body.split(boundary)
    for (i from 0 to parts.length) do
        let str = (parts[i].to("string"))
        if (str == "" || str=="--" || str=="--\r\n") continue
        str = null
        let headers = {}
        let body = buffer()
        let lines = parts[i].splitN(newLineSplit, 2)
        let headerLines = lines[0].to("string").split("\r\n")
        for (j from 0 to headerLines.length) do
            let header = headerLines[j].splitN(": ", 2)
            if (header.length != 2) continue
            headers[header[0]] = header[1]
        if (lines.length != 2) continue
        body.append(lines[1].slice(0,lines[1].length-4))
        if ("Content-Disposition" in headers) do
            let disposition = headers["Content-Disposition"].split("; ")
            if (disposition[0] == "form-data") do
                let name = json.parse(disposition[1].splitN("=", 2)[1])
                if (disposition.length >= 3) do
                    req.files[name] = {}
                    req.files[name].name = json.parse(disposition[2].splitN("=", 2)[1])
                    req.files[name].type = headers["Content-Type"]
                    req.files[name].data = body
                    let save(path) = do
                        let file = file.write(path)
                        file.buffer(body)
                        file.close()
                    req.files[name].save = save
                else do
                    req.formdata[name] = body.to("string")
    res.next()
    

let formdata(req, res) = do
    req.formdata = {}
    req.files = {}

    if (req.method != "POST") return res.next()
    if ("Content-Type" in req.headers && req.headers["Content-Type"].startswith("multipart/form-data")) do
        return __multipart(req, res)
    res.next()