let codeToStr = {}
codeToStr[100] = "Continue"
codeToStr[101] = "Switching Protocols"
codeToStr[102] = "Processing"
codeToStr[103] = "Early Hints"
codeToStr[200] = "OK"
codeToStr[201] = "Created"
codeToStr[202] = "Accepted"
codeToStr[203] = "Non-Authoritative Information"
codeToStr[204] = "No Content"
codeToStr[205] = "Reset Content"
codeToStr[206] = "Partial Content"
codeToStr[207] = "Multi-Status"
codeToStr[208] = "Already Reported"
codeToStr[226] = "IM Used"
codeToStr[300] = "Multiple Choices"
codeToStr[301] = "Moved Permanently"
codeToStr[302] = "Found"
codeToStr[303] = "See Other"
codeToStr[304] = "Not Modified"
codeToStr[305] = "Use Proxy"
codeToStr[306] = "Switch Proxy"
codeToStr[307] = "Temporary Redirect"
codeToStr[308] = "Permanent Redirect"
codeToStr[400] = "Bad Request"
codeToStr[401] = "Unauthorized"
codeToStr[402] = "Payment Required"
codeToStr[403] = "Forbidden"
codeToStr[404] = "Not Found"
codeToStr[405] = "Method Not Allowed"
codeToStr[406] = "Not Acceptable"
codeToStr[407] = "Proxy Authentication Required"
codeToStr[408] = "Request Timeout"
codeToStr[409] = "Conflict"
codeToStr[410] = "Gone"
codeToStr[411] = "Length Required"
codeToStr[412] = "Precondition Failed"
codeToStr[413] = "Payload Too Large"
codeToStr[414] = "URI Too Long"
codeToStr[415] = "Unsupported Media Type"
codeToStr[416] = "Range Not Satisfiable"
codeToStr[417] = "Expectation Failed"
codeToStr[418] = "I'm a teapot"
codeToStr[421] = "Misdirected Request"
codeToStr[422] = "Unprocessable Entity"
codeToStr[423] = "Locked"
codeToStr[424] = "Failed Dependency"
codeToStr[425] = "Too Early"
codeToStr[426] = "Upgrade Required"
codeToStr[428] = "Precondition Required"
codeToStr[429] = "Too Many Requests"
codeToStr[431] = "Request Header Fields Too Large"
codeToStr[451] = "Unavailable For Legal Reasons"
codeToStr[500] = "Internal Server Error"
codeToStr[501] = "Not Implemented"
codeToStr[502] = "Bad Gateway"
codeToStr[503] = "Service Unavailable"
codeToStr[504] = "Gateway Timeout"
codeToStr[505] = "HTTP Version Not Supported"
codeToStr[506] = "Variant Also Negotiates"
codeToStr[507] = "Insufficient Storage"
codeToStr[508] = "Loop Detected"
codeToStr[510] = "Not Extended"
codeToStr[511] = "Network Authentication Required"

let errorCodeToString(code) = do
    if (code not in codeToStr) do
        return "Unknown Error"
    return codeToStr[code]

let build(headers, code, data) = do
    let output = []
    output.append("HTTP/1.1 "+string(code)+" "+errorCodeToString(code))
    let keys = headers.keys()
    for (i from 0 to keys.length) do
        let value = headers[keys[i]]
        if (typeof(value) == "array") do
            value = value.join("\n"+keys[i] + ": ")
        if ("\n" in value) do
            throwError("Response Header Build Error","Header '"+keys[i]+"' contains newline. This can be a security risk.")
        output.append(keys[i] + ": " + value)
    output.append("")
    output.append(data)
    return output.join("\r\n")