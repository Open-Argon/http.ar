import "listener" as listener
import "logger" as *
import "static" as *
import "cookie" as *
import "formdata" as *
import "debug" as __debug

let setDebug(value) = do
    if (__debug.inDebug == value) return
    __debug.inDebug = value
    if (value) do
        term.log("Debug mode enabled")
    else do
        term.log("Debug mode disabled")

let server() = do
    let class = {port: 3000, numThreads: 1, callback: ()=term.log("Server running on port "+class.port)}
    let threads = []
    let routes = []
    let Socket = null
    class.onErr(e) = do
        term.error(e.type+": "+e.message)
        term.error(e.code)
        term.error(e.path+" on line "+e.line)
    class.run() = do
        if (Socket != null) do
            throwError("Server already running")
        let starter() = do
            Socket = socket.server("tcp", class.port)
            for (i from 0 to class.numThreads) do
                let t = thread(()=listener.listener(Socket, routes, class.onErr))
                threads.append(t)
                t.start()
            class.callback()
        let t = thread(starter)
        t.start()
    
    class.close() = Socket.close()
        
    class.route(path, methods, callback) = do
        if (methods == null) do
            methods = ["GET"]
        routes.append({path: path, callback: callback, methods: methods, type: "route"})
    class.use(callback) = routes.append({callback: callback, type: "middleware"})
    return class
